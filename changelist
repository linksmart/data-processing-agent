2018.01.09 - 1.8.0 RELEASE:
    Features:
        * Add Proxy REST multi caster utility for management of multi agents.
        * Add async requests type for MQTT proxying management
        * Service discovery for the broker
        * LinkSmart Service registration 2.2
        * new /execute/ endpoint to run statement that don't run continuously.
        * Add /broker-conf/ and /broker-connections/ to dynamically change broker configurations
		* Add emial notification handler. Now the results of a statement can be send as email.
    DEV:
        * LA-SC IT added
    FIX:
        * Fix some issues in Statement MQTT API
        * Fix issues with REST response

2017.11.14 - 1.7.0 RELEASE:
    Features:
        * Persistence and Essentiality features had been added
        * The default topics is provided in output of the Statement
    DEV:
        * Several changes to improve CI
        * Move the Nexus server from linksmart.eu/repo to nexus.linksmart.eu
    FIX:
        * Now (De)Serializers are centralized
17.10.2017 - 1.6.0 RELEASE:
    Features:
        * add JWS (JSON Web Sing) into the agent
        * the agent sends the registration information via MQTT
        * the JWS extension retries automatically the public key of the agents
        * now ISO8601 parsing utils now accepts different variants of ISO8601 timestamps
    DEV:
        * Some changes for automatic integration testing made by the CI server
        * add maven release plugin to manage release process
    FIX:
        * version of the agent is properly display in Open API JSON files
09.08.2017 - 1.5.1 RELEASE:
    DEV:
        * Improvements in the building process for automatic building by pipelines (CI server)
    FIX:
        * Javadoc is now fixed
        * Fixed some issues with the Utils StaticBroker

04.08.2017 - 1.5.1 RELEASE:
    Features:
        * RawEvents now are added
        * the properties of the JSON are not Case Sensitive anymore
    DEV:
    FIX:
        * The ID now is not null
        * the docker file now is pointing releases
        * remove the 'will' from the config file where were not necessary anymore
        * REST API version is now correctly display
01.08.2017 - 1.5.0 RELEASE:
    Features:
        * Now events from files can be loaded one by one
        * add the possibility to use different types of payloads of the event files
        * Full implementation of OGC SensorThings
        * Now the agent send registration messages to the broker
    DEV:
        * The service now has docker files and a docker compose to start with a broker.
    FIX:
        * CEML REST API start again
        * The all learning metrics were 'More' metric
        * the Core order had bing change CEPengine->Types->Feeders->Extensions->Bootstrapping
        * add apache common math to fix issuse in AutoregssiveANN
        * Fix package of name of Tools form service to services

13.04.2017 - 1.4.0 RELEASE:
    Features:
        * Adding Raspberry PI nd4j distribution
        * Upgrade paho clients to 1.1.0
        * Adding configuration setting for mqtt:
                messaging_client_mqtt_version (for selecting mqtt protocol version)
                messaging_client_mqtt_maxInFlightMessages (maximum message in process to be sent in the client side)
                messaging_client_mqtt_automaticReconnect (set paho to reconnect automatically instead to do it by the BrokerService client code)
                messaging_client_mqtt_session_clean_enabled (enabling or disabling clean sessions )
                messaging_client_mqtt_enableRetainPolicy (allowing retain policy)
                messaging_client_mqtt_security_user (allowing to set user)
                messaging_client_mqtt_security_password (allowing to set password)
                api_statements_mqtt_topic_base_will (allowing to set a testament topic if the connection is lost)
                api_statements_mqtt_message_base_will (allowing to set a testament message if the connection is lost)
                connection_brokers_service_connection_multiple (enable to open a connection per soft-client [experimental feature])
        * Now the AutoRegressiveNeuralNetwork can be serialized and deserialized
        * All Classification evaluation Evaluation Algorithms have a short version name.
        * Now the Agent accepts Object type in the data descriptor
        * PythonIntegration fully functional
        * Monitoring stats info about the amount of messages arrived
        * Allow environmental variables for configuration
            *All variables now change the names from '.' to '_' to avoid issues with Unix Environmental Variables
        * Create a single configuration distribution for all types of agents
        * Move the POST 'statement/add' to 'statement/' in the REST API to make it more REST
    DEV:
        * Creating evaluation tools artifacts
        * Inserting evaluation code. This can be enable by conf
        * Insert valuation code on the messaging related classes
        * New Message MQTT API for Broker API in Utils.
        * Adding testing tooling
        * The default configurations now are separate artifacts that must be loaded in maven
        * Create different base class for different type of model (Classifier or Regressor)
        * Default configuration file now is __def__conf__.cfg and its an internal file that should not be replaced
        * now the models are added in the distribution and not in the CEML building process
        * Move Tools for CEPs in a general location so every CEP can use it
        * Added Integration test for DPA
        * added several important unit test (ConfigurationTest, MQTTPackagesTest, SerializationTest, UtilitiesTest, EvaluatorsTest, LearningHandlerTest)
        * Refactor the dependency such all are in the parent poms
    FIXs:
        * When the connection is lost now resubscribed. The fix is irrelevant if the messaging.client.mqtt.automaticReconnect is enabled.
        * The classifier evaluator is fixed, before was not working since version 1.1.1
        * The Nominal Data Descriptor is working properly again
        * LS-103 & LS-107 - now the /add is no more part of the PUT statement API. And the pub topic do not concatenate twice the ID
        * Fixed some metrics that they were not being calculated correctly
        * now the HASH are SHA-256 in HEX and not in decimal
15.11.2016 - 1.3.3 RELEASE:
    Features:
        * The swagger Data-Processing API is introduced
        * Small info (Logging) notifications improvements
        * The topics for the Statement API can be changed now
        * Now is possible to bootstrap the CEML request into the IoT-LA
        * The incoming event topic now is a list of topics define in 'api.events.mqtt.topics.incoming' and not as before a single topic in 'api.events.mqtt.topic.incoming'
        * The incoming events now comes from several input topics
        * The properties 'feeder.payload.type.class' and 'feeder.payload.type.alias' change name to 'connector.observers.payload.type.classes' and 'connector.observers.type.aliases', respectively
        * The property 'feeder.payload.type.topic' was removed, now is used the new property 'api.events.mqtt.topics.incoming' as described above.
        * Add customization of Autoregressive NN
    DEV:
        * The order of loading initialization has changed. Now looks as following:
            being: '->' followed by, ':' including the process, inside of '()' is  sub sequence of process, inside of '[]' optional sequence, inside of '||' parallel(-like) process):
                initConf->CEP:(engine->loadEngineTypes)->ForcePackageLoading:[CEML:Core->API:(FILE->MQTT)]->Feeders:(Event->Statement->Bootstrapping)->Connector(File->MQTT)->[|ConnectorREST[,CEML_REST_API]|]
    FIXs:
        * MQTT notifications related to the MQTT Statement API
        * correct several problems with the Statement Feeder
        * The acceptedPrediction in prediction was not being updated
        * the configuration file loading, in particular, the function fileExist, had being fixed
        * the function filter (from CEML) now accepts double, and integer.
        * the URL generation of the broker was ignoring the port
        * the G MQ LA was not taking the correct conf.cfg file. It's fix, but the reason why the G MQ DPA builds different to the G MQ LA it's still unknown.

29.09.2016 - 1.3.2 RELEASE:
    Features:
        * add http output setting in statements.
        * add time zone and date format configurable
        * add the use of different passwords in the certificate based security for the SSL socket creation
        * CRUD CEML MQTT API is now complete
        * add SenML into the supported in the data-payloads
        * add a serialization abstraction. Now serializing and deserializing can be done without knowing the underlying implementation
        * separate the Feeders (high level API related component) from the Connectors (protocol related component)
        * BIG Change: The configuration file has being restructured:
            * all properties had changed its names.
            * The logic and concepts how the brokers had bing changed

    DEV:
        * Change List added
        * BootstrappingBean it's now part of API artifact
        * (De)serializers are new part of Utils
        * the CEML MQTT API had being adjusted to fit in the architecture of the agents (API now is MQTTIncomingObserver based)
        * the code documentation of the API is completed
        * removed the OSGi related code from some components
        * restructuring namespaces for make it homogeneous: change naming, moving classes, remove old namespace, etc
        * moved the out of date payload to a non-usable location till are up to date
        * add a new fine exception handling in the agent framework

    FIXs:
        * include non-connection related configuration settings now are also discriminator for comparison between two BrokerService(s)
        * the BootstrappingBean had being fixed
        * the bootstrapping of data types in the engine is fully functional again

31.08.2016 - 1.3.1 RELEASE:
    Features:
        * Enable Cross-Origin Resource Sharing for GET request from web browsers. Currently enabled for predictions
        * Improve the CEML API to be RESTful compliant
        * add the double functionality in list handler. One, an independent ground truth (evaluation), target (learning), learning input, prediction Input. Two, same input ground truth (evaluation) = target (learning), learning input = prediction input
        * Add lase evaluation into the model.
        * add insertion of the CEML request into the CEP engine.
        * remove the necessity to define min and max bound in the Auto-regressive NNM
        * Providing original input in the prediction, therefore adapt some functions that use the prediction class
        * Parameters to decide high and low input values. Now "Model" should have an additional attribute for AutoregressiveNeuralNetworkModel:
                "Parameters":{
                "maxInputval":100.0,
                "minInputval":1.0
                }
        * add some configuration properties needed to configure jetty security in the conf.cfg file
        * the newest WSO2 CEP is working now with the agents
        * unifying the jetty conf file with the agent conf file
    DEV:
        * starting the Docker integration (unfinished)
        * big refactoring (name changed, packages, etc.) to fit better in the architecture and to be more homogeneous
        * GC Utils move back to Event namespace (welcome back). Now it is simply Utils
        * improve code stile in several. The room for improvement areas were pointed out by sonar Qube
        * handlers now are not a single process of packing, serializing, and publishing. Now this is done in different by a Serializer, Enveloper, and Publisher. Now, there is a MQTT Publisher (default) and a HTTP Publisher. The HTTP publisher allows the agent to generate REST request
        * improving the EventType and provide a basic implantation.
        * change the SSL socket to reduce unnecessary dependencies
    FIXs:
        * RMSE Evaluator and MAE evaluator: changed logic
        * evaluation with list learning handler.
        * fixing some minor auxiliary functions
        * Avoiding possible race conditions on learning process
        * the issue that the Evaluation Metric was always "More"
        * some handlers issues regarding the casting of the handlers made by Esper. The fix triggered an issue that the events didn't arrive in order by the List handler
        * add dependencies to run in linux
        * loading configuration file from the given Class instead of the given ClassLoader. This was making the loading fail.