language: java
jdk: openjdk10
cache:
  directories:
  - "$HOME/.cache"
  - "$HOME/.m2"
services:
  - docker
jobs:
  include:
    - stage: "Maven Install (Unit & Integration Tests) & Docker Build & Push"
      name: "Building"
      install: true
      script:
        - mvn clean -B install -B
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build --force-rm -f gpl-artifacts/Dockerfile-local -t linksmart/dpa:experimental  .
        - docker push linksmart/dpa:experimental
        - docker build --force-rm -f Dockerfile-local -t linksmart/dpa:experimental  .
        - docker push linksmart/dpa:experimental
        - docker build --force-rm -f gpl-artifacts/Dockerfile-local --build-arg extensions=eu.linksmart.services.event.ceml.core.CEML -t linksmart/la:experimental .
        - docker push linksmart/la:experimental
        - docker build --force-rm -f Dockerfile-local --build-arg extensions=eu.linksmart.services.event.ceml.core.CEML -t linksmart/la:wso2-experimental  .
        - docker push linksmart/la:wso2-experimental
      install: true
    - stage: "System Tests"
      install: true
      script:
        - git clone https://github.com/linksmart/dpa-tutorials.git
        - docker-compose -f dpa-tutorials/docker-compose.yml -f dpa-tutorials/testing/docker-compose-testing.yml up --abort-on-container-exit
      name: "DPA ST"
      install: true
      git:
        depth: false
      install: true
    - script: docker-compose -f test/la-basic-it/docker-compose.yml up --abort-on-container-exit
      name: "LA ST"
    - stage: "Deploy Artifacts"
      install: true
      script: mvn deploy -B -Dlinksmart.commons.version=${LS_COMMONS_VERSION}-SNAPSHOT -Dskip=test -Dls.se.agents.version=${VERSION}-SNAPSHOT
      name: "Maven Deploy"
      install: true
    - script:
        - docker tag linksmart/dpa:experimental linksmart/dpa:snapshot
        - docker tag linksmart/la:experimental linksmart/la:snapshot
        - docker tag linksmart/dpa:wso2-experimental linksmart/dpa:wso2-snapshot
        - docker tag linksmart/la:wso2-experimental linksmart/la:wso2-snapshot
        - docker push linksmart/dpa:snapshot
        - docker push linksmart/la:snapshot
        - docker push linksmart/dpa:wso2-snapshot
        - docker push linksmart/la:wso2-snapshot
      git:
        depth: false
      install: true
      name: "Docker Push Images"
    - script: mvn javadoc:javadoc -Dls.se.agents.version=${VERSION}-SNAPSHOT
      name: "Javadoc Deploy"
      install: true
    - script:
        - docker run --name broker eclipse-mosquitto:latest
        - docker run --name la --link broker dpa:snapshot
        - ./.openAPI-extractor.json
      name: "OpenAPI GIT Push"
      install: true
