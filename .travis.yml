language: java
jdk: openjdk10
cache:
  directories:
  - "$HOME/.cache"
  - "$HOME/.m2"
services:
  - docker
jobs:
  include:
    - stage: "Maven Install"
      install: true
      script: mvn clean -B install -B
    - stage: "Docker Build&Push: Snapshots & Experimental"
      name: "DPA-ESPER:Build&Push"
      install: true
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build --force-rm -f Dockerfile-test --build-arg engine=eu.linksmart.services.event.cep.engines.EsperEngine  -t linksmart/dpa:snapshot  -t linksmart/dpa:experimental  .
        - docker push linksmart/dpa:experimental
      name: "LA-ESPER:Build&Push"
      install: true
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build ---force-rm -f Dockerfile-local --build-arg extensions=eu.linksmart.services.event.ceml.core.CEML  --build-arg engine=eu.linksmart.services.event.cep.engines.EsperEngine -t linksmart/la:experimental  -t linksmart/la:snapshot .
        - docker push linksmart/la:experimental
      name: "DPA-WSO2:Build&Push"
      install: true
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build --force-rm -f Dockerfile-test -t linksmart/dpa:wso2-snapshot  -t linksmart/dpa:wso2-experimental  .
        - docker push linksmart/dpa:wso2-experimental
      name: "LA-WSO2:Build&Push"
      install: true
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build --force-rm -f Dockerfile-test -t linksmart/dpa:wso2-snapshot  -t linksmart/la:wso2-experimental  .
        - docker push linksmart/la:wso2-experimental
    - stage: "Integration Test"
      name: "DPA IT"
      install: true
      script:
        - git clone https://github.com/linksmart/dpa-tutorials.git
        - docker-compose -f dpa-tutorials/docker-compose.yml -f dpa-tutorials/testing/docker-compose-testing.yml up --abort-on-container-exit
      name: "LA IT"
      install: true
    - script: docker-compose -f -f test/la-basic-it/docker-compose.yml up --abort-on-container-exit
    - stage: "Deploy Artifacts"
      name: "Maven Deploy"
      script: mvn deploy -B -Dlinksmart.commons.version=${LS_COMMONS_VERSION}-SNAPSHOT -Dskip=test -Dls.se.agents.version=${VERSION}-SNAPSHOT
      name: "Docker Push Images"
      install: true
    - script:
        - docker push linksmart/dpa:snapshot
        - docker push linksmart/la:snapshot
        - docker push linksmart/dpa:wso2-snapshot
        - docker push linksmart/la:wso2-snapshot
    - stage: "Documentation"
      name: "Javadoc"
      install: true
      script: mvn javadoc:javadoc -Dls.se.agents.version=${VERSION}-SNAPSHOT
      name: "OpenAPI"
      install: true
      script:
        - docker run --name broker eclipse-mosquitto:latest
        - docker run --name la --link broker dpa:snapshot
        - ./.openAPI-extractor.json
